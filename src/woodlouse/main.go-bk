package main

import (
	"log"
	"time"

	gin "gopkg.in/gin-gonic/gin.v1"
)

type Person struct {
	Name string `json:"name"`
	Age  string `json:"age"`
}

func Logger() gin.HandlerFunc {
	return func(c *gin.Context) {
		t := time.Now()

		// Set example variable
		c.Set("example", "12345")

		// before request
		log.Println("begin handle---")
		c.Next()
		// after request
		log.Println("handle finish---")
		latency := time.Since(t)
		log.Print(latency)

		// access the status we are sending
		status := c.Writer.Status()
		log.Println(status)
	}
}

func main() {
	r := gin.New()
	r.Use(Logger())

	// r.GET("/test", func(c *gin.Context) {
	//  example := c.MustGet("example").(string)

	//  // it would print: "12345"
	//  log.Println(example)
	// })

	r.GET("/test", getExample, getExample1, getExample2)
	r.POST("/post", listPerson)
	r.POST("/book", showbook)
	// Listen and serve on 0.0.0.0:8080
	r.Run(":8080")
}

func getExample(context *gin.Context) {
	log.Println("begin to invoke getExample")
	// example := context.MustGet("example").(string)
}

func getExample1(context *gin.Context) {
	log.Println("begin to invoke getExample1")
	// context.Abort()
}

func getExample2(context *gin.Context) {
	log.Println("begin to invoke getExample2")
}

func listPerson(context *gin.Context) {
	var personView Person
	// context.Bind(&personView)
	log.Println("name: ", personView.Name, "age: ", personView.Age)
}

func showbook(context *gin.Context) {
	var tmp []byte
	context.Bind(&tmp)
	log.Println(tmp)
}
